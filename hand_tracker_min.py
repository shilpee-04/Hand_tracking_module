# -*- coding: utf-8 -*-
"""Hand_Tracker_Min

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PlfBnfHBFP445EjvJV9t-zNgfgxFyM5a
"""

import cv2
import mediapipe as mp
import  time


cap = cv2.VideoCapture(0)

mpHands = mp.solutions.hands
hands = mpHands.Hands()
mpDraw = mp.solutions.drawing_utils
mp_drawing_style = mp.solutions.drawing_styles


pTime = 0
cTime = 0

while True:
    sucess,img = cap.read()
    img = cv2.flip(img,1)
    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    results = hands.process(imgRGB)
    # print(results.multi_hand_landmarks)

    if results.multi_hand_landmarks:
        for handLms in results.multi_hand_landmarks:
            for id,lm in enumerate(handLms.landmark):
                h,w,c = img.shape
                cx, cy = int(lm.x*w),int(lm.y*h)
                print(id,cx,cy)
                if id==4:
                    cv2.circle(img,(cx,cy),10,(0,255,255),cv2.FILLED)

            mpDraw.draw_landmarks(img,handLms,mpHands.HAND_CONNECTIONS,mpDraw.DrawingSpec(color=(0,0,255), thickness=2, circle_radius=2),mpDraw.DrawingSpec(color=(0,255,0), thickness=2, circle_radius=2))

    cTime = time.time()
    fps = 1/(cTime-pTime)
    pTime = cTime

    cv2.putText(img, f'FPS: {int(fps)}', (10, 40), cv2.FONT_HERSHEY_COMPLEX, 2, (0, 255, 0), 1)
    cv2.imshow("Img",img)
    cv2.waitKey(1)